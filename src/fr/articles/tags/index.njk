---
title: "Créer des tags accessibles 1/2"
abstract: "Exemple d'étiquettes accessibles (partie 1)."
titleBeforeTag: true
date: "2018-01-05"
updateDate: "2025-05-16"
tags:
  - component
---

<h2>Préambule</h2>
<p>Dans cet article, nous allons voir comment réaliser des tags accessibles. Vous savez, ces boutons que nous utilisons pour taguer du contenu, pour afficher une liste de destinataires...</p>

<h2>Rendu final</h2>
<p>Voici un exemple de rendu graphique :</p>
<img src="exemples/tag.png" alt="Capture d'écran de plusieurs tags dans une page web">

<h2 class="mt-3">Structure HTML</h2>
<p>Les tags sont habituellement placés dans une liste <abbr>HTML</abbr>. Ainsi, un utilisateur qui navigue à l'aide d'un lecteur d'écran entendra directement le nombre de tags affichés : "Liste de x éléments".
</p>

<pre><code class="html">
  &lt;ul&gt;
      &lt;li&gt;Alcatel&lt;/li&gt;
      &lt;li&gt;Doro&lt;/li&gt;
      &lt;li&gt;Apple&lt;/li&gt;
      &lt;li&gt;LG&lt;/li&gt;
      &lt;li&gt;Sony&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<div class="exemple">
  <h3>Étape 1</h3>
  <a target="_blank" title="Ouvrir l'étape 1 (nouvelle fenêtre)" href="exemples/1/"><img src="exemples/step1.png" alt="Ouvrir l'étape 1 (nouvelle fenêtre)"></a>
</div>

<h2 class="mt-3">Suppression d'un tag</h2>
<p>Un tag doit pouvoir être supprimé. Nous allons ajouter un bouton "Supprimer" sur chaque élément de notre liste. Pour les utilisateurs qui ne voient pas l'écran et qui naviguent à l'aide d'un lecteur d'écran, un simple bouton "Supprimer" n'est pas suffisant. Nous allons ajouter le nom du tag dans l'intitulé du bouton pour ôter toute ambiguïté. Exemple : "Sony, Retirer Sony de la liste".</p>
<p>L'utilisation d'un vrai bouton rend cette fonctionnalité accessible au lecteur d’écran, mais également aux personnes qui ne peuvent pas utiliser une souris et qui naviguent à l'aide du clavier en déplaçant le focus (touche <kbd>Tab</kbd>). En effet, un bouton est peut recevoir le focus nativement.</p>

<pre><code class="html">
  &lt;ul&gt;
    &lt;li&gt;Alcatel&lt;button&gt;Retirer Alcatel de la liste&lt;/button&gt;&lt;/li&gt;
    &lt;li&gt;Doro&lt;button&gt;Retirer Doro de la liste&lt;/button&gt;&lt;/li&gt;
    &lt;li&gt;Apple&lt;button&gt;Retirer Apple de la liste&lt;/button&gt;&lt;/li&gt;
    &lt;li&gt;LG&lt;button&gt;Retirer LG de la liste&lt;/button&gt;&lt;/li&gt;
    &lt;li&gt;Sony&lt;button&gt;Retirer Sony de la liste&lt;/button&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<div class="exemple">
  <h3>Étape 2</h3>
  <p><a target="_blank" title="Ouvrir l'étape 2 (nouvelle fenêtre)" href="exemples/2/"><img src="exemples/step2.png" alt="Ouvrir l'étape 2 (nouvelle fenêtre)"></a></p>
</div>

<p>Et voilà des tags simples et accessibles. Bon OK, ce n'est pas très beau.</p>

<h2>Un peu de déco</h2>
<p>Maintenant que nous avons des tags accessibles, on peut passer à la déco. L'idéal serait de faire ressembler nos tags à la première illustration proposée au début de cet article. Plusieurs solutions sont possibles.</p>

<p>On peut par exemple commencer par remplacer l'intitulé du bouton par un "X" ou un icône en forme de croix.</p>

<pre><code class="html">
  &lt;ul&gt;
    &lt;li&gt;Alcatel&lt;button&gt;X&lt;/button&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<div class="exemple">
  <h3>Étape 3</h3>
  <p><a target="_blank" title="Ouvrir l'étape 3 (nouvelle fenêtre)" href="exemples/3/"><img src="exemples/step3.png" alt="Ouvrir l'étape 3 (nouvelle fenêtre)"></a></p>
</div>

<p>Par contre, là, on vient de perdre les utilisateurs qui naviguent au lecteur d'écran, car les boutons seront désormais vocalisés "X". On peut corriger cela par exemple à l'aide d'un attribut <code>aria-label</code>.</p>

<pre><code class="html">
  &lt;ul&gt;
    &lt;li&gt;Alcatel&lt;button aria-label="Retirer Alcatel de la liste"&gt;X&lt;/button&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<p>On ajoute un peu de CSS pour faire disparaître le fond et les contours des boutons.</p>

<pre><code class="css">
button {
    background-color: transparent;
    border: none;
    color: #fff;
    font-weight: bold;
}
</code></pre>

<div class="exemple">
  <h3>Étape 4</h3>
  <p><a target="_blank" title="Ouvrir l'étape 4 (nouvelle fenêtre)" href="exemples/4/"><img src="exemples/step4.png" alt="Ouvrir l'étape 4 (nouvelle fenêtre)"></a></p>
</div>

<h2>Optimisation</h2>

<p>Cela fonctionne, mais ce n'est pas parfait. Il faut bien viser pour supprimer un tag, car le bouton en forme de croix n'est pas très grand. Ce n'est pas agréable à utiliser et cela risque d'être réellement problématique pour les personnes qui tremblent ou qui ont des difficultés avec la souris.</p>

<p>Sachant que le bouton Supprimer est la seule action disponible, on pourrait étendre la zone de clic à la totalité du tag. Ainsi même si on clique un peu à côté de la croix, l'action de suppression sera prise en compte.</p>

<pre><code class="html">
  &lt;ul&gt;
    &lt;li&gt;&lt;button aria-label="Retirer Alcatel de la liste"&gt;Alcatel&lt;/button&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<p>On ajoute la croix avec du CSS&nbsp;:</p>

<pre><code class="css">
  li button:after {
    content: "x";
    margin: .25rem .25rem .25rem .75rem;
    padding-left: .4rem;
    border-left: .15rem solid #fff;
  }
</code></pre>

<div class="exemple">
  <h3>Étape 5</h3>
  <p><a target="_blank" title="Ouvrir l'étape 5 (nouvelle fenêtre)" href="exemples/5/"><img src="exemples/step5.png" alt="Ouvrir l'étape 5 (nouvelle fenêtre)"></a></p>
</div>

<p>C'est mieux. Visuellement on voit bien deux choses dans chaque tag, son libellé et un bouton de suppression. Au lecteur d’écran par contre, pour le moment, on n'entend qu'un seul bouton "Retirer xxx de la liste". Pour corriger cela, on ajoute un <code>span</code> contenant l'intitulé du tag. Pour éviter que celui-ci n'apparaisse à l'écran (cela ferait doublon), on lui ajoute une classe de masquage accessible (<code>visually-hidden</code>). Ainsi, ce texte ne sera visible que par les lecteurs d'écran.</p>

<pre><code class="html">
  &lt;ul&gt;
    &lt;li&gt;&lt;span class="visually-hidden"&gt;Alcatel&lt;/span&gt;&lt;button aria-label="Retirer Alcatel de la liste"&gt;Alcatel&lt;/button&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>
<p>Ainsi au lecteur d'écran, pour chaque tag, on entend son libellé, puis un bouton pour le supprimer.</p>

<div class="exemple">
  <h3>Étape 6</h3>
  <p><a target="_blank" title="Ouvrir l'étape 6 (nouvelle fenêtre)" href="exemples/6/"><img src="exemples/step6.png" alt="Ouvrir l'étape 6 (nouvelle fenêtre)"></a></p>
</div>

<p>Il reste un dernier problème à résoudre : si l'on essaie de naviguer à l'aide du clavier (en déplaçant le focus à l'aide de la touche <kbd>Tab</kbd>), on ne sait pas sur quel bouton est le focus.</p>

<p>On ajoute un peu de CSS pour mettre le focus en évidence, on en profite pour en faire de même au survol de la souris.</p>

<pre><code class="css">
  button:hover, button:focus {
    background-color: #f16e00;
    color: #000;
  }
</code></pre>

<div class="exemple">
  <h3>Étape 7</h3>
  <p><a target="_blank" title="Ouvrir l'étape 7 (nouvelle fenêtre)" href="exemples/7/"><img src="exemples/step7.png" alt="ouvrir l'étape 7 (nouvelle fenêtre)"></a></p>
</div>

<h2>Optimisation (bis)</h2>
<p>Nous avons des tags accessibles, par contre lorsqu'on supprime un tag à l’aide du clavier, le focus reste positionné sur le tag qui disparaît. La position du focus n'est donc plus visible après suppression. Cela se corrige facilement avec un peu de JavaScript. Il suffit de repositionner le focus sur l'élément précédent par exemple&nbsp;:</p>

<pre><code class="javascript">
  $("button").on("click", function () {
      <span class="highlight-code">$(this).parent().prev().find("button").focus();</span>
      $(this).parent().remove();
  });
</code></pre>

<div class="exemple">
  <h3>Étape 8</h3>
  <p><a target="_blank" title="Ouvrir l'étape 8 (nouvelle fenêtre)" href="exemples/8/"><img src="exemples/step8.png" alt="Ouvrir l'étape 8 (nouvelle fenêtre)"></a></p>
</div>

<p>Lorsqu'un tag est supprimé, nous le voyons disparaître à l’écran. Par contre pour qu'un utilisateur navigant au lecteur d'écran soit également certain que celui-ci a bien été supprimé, l'idéal est de faire vocaliser un message de confirmation pour l'utilisateur.</p>
<p>Pour cela nous pouvons utiliser par exemple notre <a href="../faire-parler-le-lecteur-d-ecran/">fonction JavaScript srSpeak</a> qui utilise de l'ARIA pour faire parler le lecteur d'écran.</p>

<pre><code class="javascript">
  $("button").on("click", function () {
      <span class="highlight-code">$(this).parent().prev().find("button").focus();</span>
      $(this).parent().remove();
      srSpeak($(this).text() + "supprimé");
  });
</code></pre>

<div class="exemple">
  <h3>Étape 9</h3>
  <p><a target="_blank" title="Ouvrir l'étape 9 (nouvelle fenêtre)" href="exemples/9/"><img src="exemples/step9.png" alt="Ouvrir l'étape 9 (nouvelle fenêtre)"></a></p>
</div>

<p>Cette fois, nous avons bien des tags accessibles à la souris, au clavier et au lecteur d'écran.</p>
