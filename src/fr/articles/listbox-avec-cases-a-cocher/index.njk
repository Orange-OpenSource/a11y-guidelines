---
title: "Les listbox avec cases à cocher"
abstract: "Exemple de liste ARIA (partie 2), intégration de cases à cocher."
titleBeforeTag: true
date: "2018-01-08"
tags:
  - component
js:
  - script.js
css:
  - script.css
---


<h2>Introduction</h2>
<p>Dans cet exemple, nous repartons de <a href="../listbox/">l’exemple sur les <i lang="en">listbox</i></a> auquel nous ajoutons des cases à cocher. Nous obtiendrons un composant qui nous permettra de sélectionner un élément parmi une liste de choix, comme une <i lang="en">listbox</i> classique, mais qui permettra également de cocher certains éléments. Un composant qu’on pourrait typiquement trouver dans un webmail.</p>

<h2>Mise en garde</h2>
<p>Bien que des progrès soient réalisés à chaque nouvelle version, le support d’<abbr>ARIA</abbr> est encore partiel pour l’ensemble des lecteurs d’écran. Son utilisation doit être conditionnée par des tests de compatibilité sur l’environnement cible (couple navigateur/lecteur d’écran).</p>

<h2>Mise en place</h2>

<h3>Code <abbr>HTML</abbr></h3>
<p>Le code reprend celui de l’exemple sur les <i lang="en">listbox</i> auquel nous ajoutons l’information concernant l’état coché / non coché. Pour cela nous utilisons l’attribut <code>aria-checked</code>.</p>

<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="liste des emails"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;Informations importantes concernant votre compte&lt;/li&gt;
      …
  &lt;/ul&gt;
</code></pre>

<p>Pour afficher à l’écran l’état «&nbsp;coché&nbsp;» de l’élément, on pourrait très bien le faire via <abbr>CSS</abbr>, en affichant un pictogramme juste avant les éléments ayant un attribut <code>aria-checked="true"</code>.</p>
<p>Dans cet exemple, nous allons insérer de vraies cases à cocher à l’intérieur des options. Celles-ci ne seront pas vocalisées par le lecteur d’écran grâce à la présence du <code>role="option"</code> (pour le lecteur d’écran, ce sera une option et peu importe ce qu’on met à l’intérieur).</p>

<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="liste des emails"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;
          &lt;input tabindex="-1" type="checkbox"&gt;Informations importantes concernant votre compte
      &lt;/li&gt;
      …
  &lt;/ul&gt;
</code></pre>

<p>Ne pas oublier d’ajouter un attribut <code>tabindex="-1"</code> pour empêcher le focus sur les cases à cocher.</p>
<p>Si nous voulons des cases à cocher un peu plus jolies, on peut utiliser celles de <a href="https://boosted.orange.com/">la librairie Boosted</a> par exemple.<br>
Dans ce cas, il faut ajouter également une balise <code>label</code>.</p>
<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="liste des emails"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;
        &lt;div class="form-check"&gt;
          &lt;input tabindex="-1" id="check1" class="form-check-input" type="checkbox"&gt;&lt;label for="check1" class="form-check-label"&gt;&lt;/label&gt;
          Informations importantes concernant votre compte
        &lt;/div&gt;
      &lt;/li&gt;
      …
  &lt;/ul&gt;
</code></pre>

<p>À noter que la balise <code>label</code> reste vide ici. En effet dans ce composant, on ne souhaite pas que la case à cocher soit sélectionnée si on clique sur le texte affiché dans la liste.</p>

<h3>Interactions</h3>
<p>Pour gérer l’interaction à la souris, il suffit de modifier la valeur de l’attribut <code>aria-checked</code> lorsqu’une case à cocher est cliquée.</p>

<pre><code class="js">
document.querySelectorAll("[type=checkbox]").forEach(checkbox =>{
  checkbox.addEventListener("click",function(e){
      if(this.checked){
          this.parentElement.parentElement.setAttribute("aria-checked", "true");
      }
      else{
          this.parentElement.parentElement.setAttribute("aria-checked", "false");
      }
      e.stopPropagation();
  })
})
 </code></pre>

<p>Il ne reste plus qu’à gérer l’interaction au clavier. Un élément doit pouvoir être coché ou décoché à l’aide de la barre espace. On insère ce comportement à la suite du code qui gère déjà les flèches du clavier (cf. <a href="../listbox/">exemple sur les <i lang="en">listbox</i></a>).</p>
<pre><code class="js">
  document.getElementById("exempleCheckbox").addEventListener("keydown", function (e) {
    let currentItem = this.querySelector("[aria-selected=true]");
    switch(e.keyCode){
        case 38: // Up arrow
            if(currentItem.previousElementSibling !== null){
                currentItem.setAttribute("aria-selected","false");
                currentItem.previousElementSibling.setAttribute("aria-selected", "true");
                currentItem.previousElementSibling.focus();
                currentItem.previousElementSibling.classList.add('active');
            }
            e.preventDefault();
            break;
        case 40: // Down arrow
            if(currentItem.nextElementSibling !== null){
                currentItem.setAttribute("aria-selected","false");
                currentItem.nextElementSibling.setAttribute("aria-selected","true");
                currentItem.nextElementSibling.focus();
                currentItem.nextElementSibling.classList.add('active');
            }
            e.preventDefault();
            break;
<div class="important">            case 32: // Space                                                                                                           
            if (currentItem.getAttribute("aria-checked") === "true") {
                currentItem.setAttribute("aria-checked", "false");
                currentItem.querySelector("input[type=checkbox]").checked = false;
            } else {                      
                currentItem.setAttribute("aria-checked", "true");
                currentItem.firstElementChild.setAttribute("aria-checked", "true");
                currentItem.querySelector("input[type=checkbox]").checked = true;;
            }
            e.preventDefault();
            break;</div>
  }
});
</code></pre>

<h2>Exemple</h2>

<h3 id="email-list">Liste des emails</h3>

<div class="row">
  <ul id="exempleCheckbox" role="listbox" tabindex="0" class="col-md-8 list-group" aria-describedby="email-list">
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false" aria-selected="true">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check1" class="form-check-input" type="checkbox">
          <label for="check1" class="form-check-label">Informations importantes concernant votre compte</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check2" class="form-check-input" type="checkbox">
          <label for="check2" class="form-check-label">Test envoi d’e-mail</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check3" class="form-check-input" type="checkbox">
          <label for="check3" class="form-check-label">Photos du week-end à la mer</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check4" class="form-check-input" type="checkbox">
          <label for="check4" class="form-check-label">Re: Votre commande N°3642</label>
        </div>
      </li>
  </ul>
</div>

<h3>Place aux tests</h3>

<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Utilisation à la souris&nbsp;:</strong> on peut sélectionner une option en cliquant sur le texte. On peut cocher ou décocher une option en cliquant sur les cases à cocher.</p>
<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Utilisation au clavier&nbsp;:</strong> on peut sélectionner une option à l’aide des flèches du clavier haut ou bas. On peut cocher ou décocher une option à l’aide de la barre espace.</p>
<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Utilisation avec un lecteur d’écran&nbsp;:</strong> mêmes raccourcis clavier (haut, bas et barre espace). Pour chaque élément, le lecteur d’écran nous donne l’information si celui-ci est sélectionné et s’il est coché ou non.</p>


<h2>Exemple webmail</h2>
<p>Voici une maquette statique qui met en œuvre le composant <i lang="en">listbox</i> de cet exemple et celui de l’exemple sur les <a href="../listbox/"><i lang="en">listbox</i> classiques</a>.</p>
<a class="btn btn-outline-secondary" target="_blank" href="webmail/">Ouvrir le webmail</a>

<h2>Liens</h2>
<p>Plus d’infos sur <abbr>ARIA</abbr> et les <i lang="en">listbox</i>&nbsp;:</p>
<ul lang="en">
  <li><a hreflang="en" href="http://w3c.github.io/aria/practices/aria-practices.html#Listbox"><abbr>WAI</abbr>-<abbr>ARIA</abbr> Authoring Practices 1.1</a></li>
  <li><a hreflang="en" href="https://www.w3.org/TR/wai-aria-1.1/#roles">The roles model</a></li>
</ul>
