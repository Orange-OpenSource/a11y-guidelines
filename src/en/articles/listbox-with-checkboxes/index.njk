---
title: "Listbox with checkboxes"
abstract: "Example of ARIA list (part 2)."
titleBeforeTag: true
date: "2018-01-08"
tags:
  - component
js:
  - script.js
css:
  - script.css
---

<h2>Introduction</h2>
<p>In this example, we start from <a href="../listbox/">the listbox example</a> and we add checkboxes. We will get a component that will allow us to select an item from a list of items, just like a conventional listbox, but that allows us to check some items. We often find it in webmails.</p>

<h2>Caution</h2>
<p>Although improvements are being made with each new version, support for <abbr>ARIA</abbr> is still partial for all screen readers. Its use should be conditioned by compatibility tests on the target environments (browser/screen reader combinations).</p>

<h2>Implementation</h2>

<h3>HTML code</h3>
<p>We take the same listbox from the listbox example and we add the ability to check&nbsp;/ uncheck the items. For this we use the <code>aria-checked</code> attribute.</p>

<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="emails list"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;Important information about your account&lt;/li&gt;
      ...
  &lt;/ul&gt;
</code></pre>

<p>To symbolize that the item is checked, it could be very simple to do it via <abbr>CSS</abbr>, displaying a pictogram just before the items having the attribute <code>aria-checked="true"</code>.<p>
<p>In this example, we will insert real check boxes inside each item. These will not be vocalized by the screen reader because we added the <code>role="option"</code> attribute (for the screen reader, it will be considered as an item no matter what you put inside it).</p>

<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="email list"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;
          &lt;input tabindex="-1" type="checkbox"&gt;Important information about your account
      &lt;/li&gt;
      ...
  &lt;/ul&gt;
</code></pre>

<p>Do not forget to add the <code>tabindex="-1"</code> attribute to ensure that the checkboxes do not get the focus</p>
<p>If we want fancier checkboxes, we can use those from <a href="http://boosted.orange.com/">the Boosted library</a>.<br>
In this case, we must also add the <code>label</code> tag.</p>
<pre><code class="html">
  &lt;ul role="listbox" tabindex="0" aria-label="email list"&gt;
      &lt;li tabindex="-1" role="option" aria-checked="false"&gt;
        &lt;div class="form-check mb-0"&gt;
          &lt;input tabindex="-1" id="check1" class="form-check-input" type="checkbox"&gt;&lt;label for="check1" class="form-check-label"&gt;&lt;/label&gt;
          Important information about your account
        &lt;/div&gt;
      &lt;/li&gt;
      ...
  &lt;/ul&gt;
</code></pre>

<p>Note that the <code>label</code> tag is left blank here intentionally. Indeed, in this component, we do not want the checkbox to be selected if you click on the item label.</p>

<h3>Interactions</h3>
<p>To manage the interaction with the mouse, simply change the value of the <code>aria-checked</code> attribute when a checkbox is clicked.</p>

<pre><code class="js">
document.querySelectorAll("[type=checkbox]").forEach(checkbox =>{
  checkbox.addEventListener("click",function(e){
      if(this.checked){
          this.parentElement.parentElement.setAttribute("aria-checked", "true");
      }
      else{
          this.parentElement.parentElement.setAttribute("aria-checked", "false");
      }
      e.stopPropagation();
  })
})
 </code></pre>

<p>Now you must only manage the interaction with the keyboard. An item must be checked or unchecked by using the space bar. We insert this behaviour right after the code that manages the arrow keys (see <a href="../listbox/">the listbox example</a>).</p>
<pre><code class="js">
  document.getElementById("exempleCheckbox").addEventListener("keydown", function (e) {
    let currentItem = this.querySelector("[aria-selected=true]");
    switch(e.keyCode){
        case 38: // Up arrow
            if(currentItem.previousElementSibling !== null){
                currentItem.setAttribute("aria-selected","false");
                currentItem.previousElementSibling.setAttribute("aria-selected", "true");
                currentItem.previousElementSibling.focus();
                currentItem.previousElementSibling.classList.add('active');
            }
            e.preventDefault();
            break;
        case 40: // Down arrow
            if(currentItem.nextElementSibling !== null){
                currentItem.setAttribute("aria-selected","false");
                currentItem.nextElementSibling.setAttribute("aria-selected","true");
                currentItem.nextElementSibling.focus();
                currentItem.nextElementSibling.classList.add('active');
            }
            e.preventDefault();
            break;
<div class="important">            case 32: // Space                                                                                                           
            if (currentItem.getAttribute("aria-checked") === "true") {
                currentItem.setAttribute("aria-checked", "false");
                currentItem.querySelector("input[type=checkbox]").checked = false;
            } else {                      
                currentItem.setAttribute("aria-checked", "true");
                currentItem.firstElementChild.setAttribute("aria-checked", "true");
                currentItem.querySelector("input[type=checkbox]").checked = true;;
            }
            e.preventDefault();
            break;</div>
  }
});
</code></pre>

<h2>Example</h2>

<h3 id="email-list">Email list</h3>

<div class="row">
  <ul id="exempleCheckbox" role="listbox" class="list-group" tabindex="0" class="col-md-8" aria-labelledby="email-list">
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false" aria-selected="true">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check1" class="form-check-input" type="checkbox"><label for="check1">
          Important information about your account</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check2" class="form-check-input" type="checkbox"><label for="check2">
          Sending message test</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check3" class="form-check-input" type="checkbox"><label for="check3">
          Photos of the weekend at the sea</label>
        </div>
      </li>
      <li class="list-group-item" tabindex="-1" role="option" aria-checked="false">
        <div class="form-check mb-0">
          <input tabindex="-1" id="check4" class="form-check-input" type="checkbox"><label for="check4">
          Re: Your order NÂ°3642</label>
        </div>
      </li>
  </ul>
</div>

<h3>Testing</h3>

<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Mouse support:</strong> you can select an item by clicking on the text. You can check or uncheck an option by clicking the checkboxes.</p>
<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Keyboard support:</strong> you can select an item using the arrow up or down keys. You can check or uncheck an option using the spacebar.</p>
<p><strong><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Screen reader support:</strong>  same keyboard shortcuts (up, down and space bar). For each item, the screen reader gives us the information whether it is selected / checked or not.</p>


<h2>Webmail example</h2>
<p>Here is a static prototype that implements the listbox component of this example and the <a href="../listbox/">listbox example</a>.</p>
<a class="btn btn-secondary" target="_blank" href="webmail/">Open the webmail</a>

<h2>Links</h2>
More information on <abbr>ARIA</abbr> and listbox:
<ul>
  <li><a href="http://w3c.github.io/aria-practices/#Listbox">WAI-ARIA Authoring Practices 1.1</a></li>
  <li><a href="https://www.w3.org/TR/wai-aria-1.1/#roles">The roles model</a></li>
</ul>
