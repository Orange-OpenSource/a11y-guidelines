---
title: "Dropdown menu"
abstract: "Create an accessible drop-down menu."
titleBeforeTag: true
date: "2018-01-17"
tags:
  - component
---

<h2>Introduction</h2>
<p>In this example we will use the <a href="https://boosted.orange.com/docs/5.1/components/dropdowns/">drop-down menu</a> available in the <a href="https://boosted.orange.com/">Boosted</a> library. This library based on Bootstrap allows you to quickly create <abbr title="User Interface">UI</abbr> components branded with the Orange colours.</p>

<p>The example implementation described below is suitable for navigation menus as well as for unit components presenting a list of actions.</p>

<h2>Final example</h2>
<p>This is how the drop-down looks with our library.</p>

<!-- Final menu -->
<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu1" data-bs-toggle="dropdown">
    My account
    <span class="caret"></span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">My cart</a></li>
    <li><a class="dropdown-item" href="#">My orders</a></li>
    <li><a class="dropdown-item" href="#">My details</a></li>
    <li role="separator" class="dropdown-divider"></li>
    <li><a class="dropdown-item" href="#">Log out</a></li>
  </ul>
</div>

<h2>Code example</h2>

<!-- Example 1 code -->
<pre><code class="html">
&lt;div class="dropdown"&gt;
  &lt;button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenu1" data-bs-toggle="dropdown"&gt;
    My account
    &lt;span class="caret"&gt;&lt;/span&gt;
  &lt;/button&gt;
  &lt;ul class="dropdown-menu"&gt;
    &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;My cart&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;My orders&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;My details&lt;/a&gt;&lt;/li&gt;
    &lt;li role="separator" class="dropdown-divider"&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Log out&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<h2>Testing</h2>
<p>For this menu to be accessible, it must be usable with a mouse, keyboard and screen reader.</p>

<h3>Keyboard navigation</h3>
 <dl>
   <dt>Move the focus to “My Account” using the <kbd>Tab</kbd> key and press the <kbd>Enter</kbd> key.</dt>
   <dd>The menu opens.</dd>
   <dt>Use the <kbd>up</kbd> / <kbd>down</kbd> arrows.</dt>
   <dd>These allow you to navigate the different menu items.</dd>
   <dt>Press <kbd>Escape</kbd>.</dt>
   <dd>The menu closes. On closing, the focus is automatically repositioned onto the button that opened the menu.</dd>
   <dt></dt>
</dl>

<h3>Screen reader navigation</h3>
 <dl>
   <dt>Position the cursor on “My Account”.</dt>
   <dd>The screen reader says there is a drop-down menu, and vocalizes the drop-down state (open or closed).</dd>
   <dt>Press the <kbd>Enter</kbd> key.</dt>
   <dd>The menu opens, the first item is selected. This element is automatically vocalized by the screen reader.</dd>
   <dt>Use the <kbd>up</kbd> / <kbd>down</kbd> arrows.</dt>
   <dd>These allow you to navigate to the different menu items.</dd>
   <dt>Select a menu item using the <kbd>Enter</kbd> key.</dt>
   <dd>The menu closes. As the focus is repositioned automatically, the screen reader again vocalizes the menu button, and its state.</dd>
 </dl>

<h3><abbr>ARIA</abbr> attributes</h3>

<ul>   
	<li><code>aria-expanded</code>: the <code>aria-expanded</code> attribute with a <code>true</code>/<code>false</code> value, allows to vocalize menu states (open or closed).</li>
	<li><code>aria-current</code>: if the dropdown menu is used within a navigation menu, provide for the addition of an attribute <code>aria-current="page"</code> on the item corresponding to the active page.</li>
	<li><code>aria-haspopup</code>: the <code>aria-haspopup</code> attribute is reserved for the <code> menu </code> role (see paragraph "Special case of application menus"). It is therefore not present in this implementation.</li>
</ul>

<pre><code class="html">
  &lt;button aria-expanded="false"&gt;Mon compte&lt;/button&gt;
    &lt;ul class="dropdown-menu"&gt;
      &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Mon panier&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a class="dropdown-item" href="#" aria-current="page"&gt;Mes commandes&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Mes informations&lt;/a&gt;&lt;/li&gt;
      &lt;li role="separator" class="dropdown-divider"&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a class="dropdown-item" href="#"&gt;Déconnexion&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
</code></pre>

<p>In addition, the ARIA pattern describes the use of an <code>aria-controls</code> attribute, as well as additional optional keyboard interactions: <kbd lang="en">Home</kbd> / <kbd lang="en">End</kbd></p>
<p>Example: <a href="https://www.w3.org/WAI/ARIA/apg/example-index/disclosure/disclosure-navigation.html">Example Disclosure for Navigation Menus</a></p>

<h2>Special case of application menus</h2>

<p>The ARIA pattern describes a "Menu" and "Menubar" component, using the roles <code>menu</code> or <code>menubar</code>.</p>
<p>Please note, this pattern is reserved only for the creation of an application menu, the interactions of which should be similar to the behavior of the menus present in desktop applications for example.</p>
<p>These implementations are more complex and unnecessary for web navigation menus.</p>

<p>Example: <a href="https://www.w3.org/WAI/ARIA/apg/example-index/menubar/menubar-navigation.html">Editor Menubar Example</a></p>
